"use strict";(self.webpackChunkblip_ds=self.webpackChunkblip_ds||[]).push([[2116],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blip-ds-react/dist/components.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Fv:()=>BdsAccordion,JS:()=>BdsAccordionBody,w3:()=>BdsAccordionGroup,wY:()=>BdsAccordionHeader,DO:()=>BdsAlert,LP:()=>BdsAlertActions,B5:()=>BdsAlertBody,vf:()=>BdsAlertHeader,n5:()=>BdsAutocomplete,av:()=>BdsAvatar,kD:()=>BdsAvatarGroup,N6:()=>BdsBadge,WL:()=>BdsBanner,_j:()=>BdsBannerLink,Dw:()=>BdsButton,OJ:()=>BdsButtonIcon,yG:()=>BdsCard,XM:()=>BdsCardBody,z9:()=>BdsCardFooter,My:()=>BdsCardHeader,sR:()=>BdsCardTitle,LF:()=>BdsCheckbox,r0:()=>BdsChipClickable,ET:()=>BdsChipSelected,a3:()=>BdsChipTag,Ps:()=>BdsDataTable,wJ:()=>BdsDatepicker,Sm:()=>BdsGrid,ho:()=>BdsIcon,TO:()=>BdsIllustration,x6:()=>BdsInput,Jp:()=>BdsInputChips,ND:()=>BdsInputEditable,Sr:()=>BdsInputPassword,uT:()=>BdsInputPhoneNumber,Bi:()=>BdsList,m5:()=>BdsListItem,WJ:()=>BdsLoadingBar,J3:()=>BdsLoadingPage,M4:()=>BdsLoadingSpinner,U2:()=>BdsModal,PU:()=>BdsModalAction,F_:()=>BdsNavbar,az:()=>BdsNavbarContent,Sg:()=>BdsPagination,gl:()=>BdsPaper,sZ:()=>BdsProgressBar,oG:()=>BdsRadio,Gd:()=>BdsRadioGroup,b3:()=>BdsSelect,z:()=>BdsSelectChips,Np:()=>BdsSelectOption,ZK:()=>BdsSidebar,JL:()=>BdsSkeleton,mb:()=>BdsStep,fm:()=>BdsStepper,zO:()=>BdsSwitch,Ld:()=>BdsTabGroup,wA:()=>BdsTabItem,Lw:()=>BdsTable,Jn:()=>BdsTableBody,EQ:()=>BdsTableCell,GT:()=>BdsTableHeader,II:()=>BdsTableRow,Xc:()=>BdsTableTh,nb:()=>BdsThemeProvider,r2:()=>BdsToast,zy:()=>BdsTooltip,Rl:()=>BdsTypo,S0:()=>BdsUpload});var react=__webpack_require__("./node_modules/react/index.js");const camelToDashCase=str=>str.replace(/([A-Z])/g,(m=>`-${m[0].toLowerCase()}`)),getClassName=(classList,newProps,oldProps)=>{const newClassProp=newProps.className||newProps.class,oldClassProp=oldProps.className||oldProps.class,currentClasses=arrayToMap(classList),incomingPropClasses=arrayToMap(newClassProp?newClassProp.split(" "):[]),oldPropClasses=arrayToMap(oldClassProp?oldClassProp.split(" "):[]),finalClassNames=[];return currentClasses.forEach((currentClass=>{incomingPropClasses.has(currentClass)?(finalClassNames.push(currentClass),incomingPropClasses.delete(currentClass)):oldPropClasses.has(currentClass)||finalClassNames.push(currentClass)})),incomingPropClasses.forEach((s=>finalClassNames.push(s))),finalClassNames.join(" ")},isCoveredByReact=eventNameSuffix=>{if("undefined"==typeof document)return!0;{const eventName="on"+(eventNameSuffix=>"doubleclick"===eventNameSuffix?"dblclick":eventNameSuffix)(eventNameSuffix);let isSupported=eventName in document;if(!isSupported){const element=document.createElement("div");element.setAttribute(eventName,"return;"),isSupported="function"==typeof element[eventName]}return isSupported}},syncEvent=(node,eventName,newEventHandler)=>{const eventStore=node.__events||(node.__events={}),oldEventHandler=eventStore[eventName];oldEventHandler&&node.removeEventListener(eventName,oldEventHandler),node.addEventListener(eventName,eventStore[eventName]=function handler(e){newEventHandler&&newEventHandler.call(this,e)})},arrayToMap=arr=>{const map=new Map;return arr.forEach((s=>map.set(s,s))),map},mergeRefs=(...refs)=>value=>{refs.forEach((ref=>{((ref,value)=>{"function"==typeof ref?ref(value):null!=ref&&(ref.current=value)})(ref,value)}))};var __rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const createComponent_createReactComponent=(tagName,ReactComponentContext,manipulatePropsFunction,defineCustomElement)=>{void 0!==defineCustomElement&&defineCustomElement();const displayName=tagName.toLowerCase().split("-").map((segment=>segment.charAt(0).toUpperCase()+segment.slice(1))).join("");const ReactComponent=class extends react.Component{constructor(props){super(props),this.setComponentElRef=element=>{this.componentEl=element}}componentDidMount(){this.componentDidUpdate(this.props)}componentDidUpdate(prevProps){((node,newProps,oldProps={})=>{if(node instanceof Element){const className=getClassName(node.classList,newProps,oldProps);""!==className&&(node.className=className),Object.keys(newProps).forEach((name=>{if("children"!==name&&"style"!==name&&"ref"!==name&&"class"!==name&&"className"!==name&&"forwardedRef"!==name)if(0===name.indexOf("on")&&name[2]===name[2].toUpperCase()){const eventName=name.substring(2),eventNameLc=eventName[0].toLowerCase()+eventName.substring(1);isCoveredByReact(eventNameLc)||syncEvent(node,eventNameLc,newProps[name])}else node[name]=newProps[name],"string"==typeof newProps[name]&&node.setAttribute(camelToDashCase(name),newProps[name])}))}})(this.componentEl,this.props,prevProps)}render(){const _a=this.props,{children,forwardedRef,style,className,ref}=_a,cProps=__rest(_a,["children","forwardedRef","style","className","ref"]);let propsToPass=Object.keys(cProps).reduce(((acc,name)=>{const value=cProps[name];if(0===name.indexOf("on")&&name[2]===name[2].toUpperCase()){const eventName=name.substring(2).toLowerCase();"undefined"!=typeof document&&isCoveredByReact(eventName)&&(acc[name]=value)}else{const type=typeof value;"string"!==type&&"boolean"!==type&&"number"!==type||(acc[camelToDashCase(name)]=value)}return acc}),{});manipulatePropsFunction&&(propsToPass=manipulatePropsFunction(this.props,propsToPass));const newProps=Object.assign(Object.assign({},propsToPass),{ref:mergeRefs(forwardedRef,this.setComponentElRef),style});return(0,react.createElement)(tagName,newProps,children)}static get displayName(){return displayName}};return ReactComponentContext&&(ReactComponent.contextType=ReactComponentContext),((ReactComponent,displayName)=>{const forwardRef=(props,ref)=>react.createElement(ReactComponent,Object.assign({},props,{forwardedRef:ref}));return forwardRef.displayName=displayName,react.forwardRef(forwardRef)})(ReactComponent,displayName)},BdsAccordion=createComponent_createReactComponent("bds-accordion"),BdsAccordionBody=createComponent_createReactComponent("bds-accordion-body"),BdsAccordionGroup=createComponent_createReactComponent("bds-accordion-group"),BdsAccordionHeader=createComponent_createReactComponent("bds-accordion-header"),BdsAlert=createComponent_createReactComponent("bds-alert"),BdsAlertActions=createComponent_createReactComponent("bds-alert-actions"),BdsAlertBody=createComponent_createReactComponent("bds-alert-body"),BdsAlertHeader=createComponent_createReactComponent("bds-alert-header"),BdsAutocomplete=createComponent_createReactComponent("bds-autocomplete"),BdsAvatar=createComponent_createReactComponent("bds-avatar"),BdsAvatarGroup=createComponent_createReactComponent("bds-avatar-group"),BdsBadge=createComponent_createReactComponent("bds-badge"),BdsBanner=createComponent_createReactComponent("bds-banner"),BdsBannerLink=createComponent_createReactComponent("bds-banner-link"),BdsButton=createComponent_createReactComponent("bds-button"),BdsButtonIcon=createComponent_createReactComponent("bds-button-icon"),BdsCard=createComponent_createReactComponent("bds-card"),BdsCardBody=createComponent_createReactComponent("bds-card-body"),BdsCardFooter=createComponent_createReactComponent("bds-card-footer"),BdsCardHeader=createComponent_createReactComponent("bds-card-header"),BdsCardTitle=createComponent_createReactComponent("bds-card-title"),BdsCheckbox=createComponent_createReactComponent("bds-checkbox"),BdsChipClickable=createComponent_createReactComponent("bds-chip-clickable"),BdsChipSelected=createComponent_createReactComponent("bds-chip-selected"),BdsChipTag=createComponent_createReactComponent("bds-chip-tag"),BdsDataTable=createComponent_createReactComponent("bds-data-table"),BdsDatepicker=createComponent_createReactComponent("bds-datepicker"),BdsGrid=createComponent_createReactComponent("bds-grid"),BdsIcon=createComponent_createReactComponent("bds-icon"),BdsIllustration=createComponent_createReactComponent("bds-illustration"),BdsInput=createComponent_createReactComponent("bds-input"),BdsInputChips=createComponent_createReactComponent("bds-input-chips"),BdsInputEditable=createComponent_createReactComponent("bds-input-editable"),BdsInputPassword=createComponent_createReactComponent("bds-input-password"),BdsInputPhoneNumber=createComponent_createReactComponent("bds-input-phone-number"),BdsList=createComponent_createReactComponent("bds-list"),BdsListItem=createComponent_createReactComponent("bds-list-item"),BdsLoadingBar=createComponent_createReactComponent("bds-loading-bar"),BdsLoadingPage=createComponent_createReactComponent("bds-loading-page"),BdsLoadingSpinner=createComponent_createReactComponent("bds-loading-spinner"),BdsModal=createComponent_createReactComponent("bds-modal"),BdsModalAction=createComponent_createReactComponent("bds-modal-action"),BdsNavbar=createComponent_createReactComponent("bds-navbar"),BdsNavbarContent=createComponent_createReactComponent("bds-navbar-content"),BdsPagination=createComponent_createReactComponent("bds-pagination"),BdsPaper=createComponent_createReactComponent("bds-paper"),BdsProgressBar=createComponent_createReactComponent("bds-progress-bar"),BdsRadio=createComponent_createReactComponent("bds-radio"),BdsRadioGroup=createComponent_createReactComponent("bds-radio-group"),BdsSelect=createComponent_createReactComponent("bds-select"),BdsSelectChips=createComponent_createReactComponent("bds-select-chips"),BdsSelectOption=createComponent_createReactComponent("bds-select-option"),BdsSidebar=createComponent_createReactComponent("bds-sidebar"),BdsSkeleton=createComponent_createReactComponent("bds-skeleton"),BdsStep=createComponent_createReactComponent("bds-step"),BdsStepper=createComponent_createReactComponent("bds-stepper"),BdsSwitch=createComponent_createReactComponent("bds-switch"),BdsTabGroup=createComponent_createReactComponent("bds-tab-group"),BdsTabItem=createComponent_createReactComponent("bds-tab-item"),BdsTable=createComponent_createReactComponent("bds-table"),BdsTableBody=createComponent_createReactComponent("bds-table-body"),BdsTableCell=createComponent_createReactComponent("bds-table-cell"),BdsTableHeader=createComponent_createReactComponent("bds-table-header"),BdsTableRow=createComponent_createReactComponent("bds-table-row"),BdsTableTh=createComponent_createReactComponent("bds-table-th"),BdsThemeProvider=createComponent_createReactComponent("bds-theme-provider"),BdsToast=createComponent_createReactComponent("bds-toast"),BdsTooltip=createComponent_createReactComponent("bds-tooltip"),BdsTypo=createComponent_createReactComponent("bds-typo"),BdsUpload=createComponent_createReactComponent("bds-upload")},"./src/components/icon/icon.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllEmojis:()=>AllEmojis,AllLogos:()=>AllLogos,AllOutlineIcons:()=>AllOutlineIcons,AllSolidIcons:()=>AllSolidIcons,FrameworkReact:()=>FrameworkReact,Properties:()=>Properties,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_icon_mdx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/icon/icon.mdx"),_blip_ds_react_dist_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./blip-ds-react/dist/components.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Icon",parameters:{docs:{page:_icon_mdx__WEBPACK_IMPORTED_MODULE_1__.default}}},solidIconsName=["ai","add","agent-rule","arrow-ball-down","arrow-ball-left","arrow-ball-right","arrow-ball-up","arrow-down","arrow-left","arrow-right","arrow-up","attention","audio","automation","bag","barcode","bill","blip-chat","blip-forum","builder-http","builder-java-script","builder-redirect","builder-tracking","builder-variable","catalog","cart-shop","checkball","contact","command","email","emoji","emoji-negative","emoji-neutral","error","faq","favorite","filter-table","folder-save","folder","gift","heart","http","info","javascript","level-up","mark","message-ballon","message-unread","organize-blocks","organize-list","pause","piggy-bank","pin","pix","play","qrcode","question","redirect","robot","robot-2","robot-3","robot-4","robot-5","sale","save","send","sms","store","openfinance","target","ticket","tracking","unpin","variable","verified","video","voip","whatsapp","wallet","warning"],outlineIconsName=["123","ab","add-persistent-menu","add","agent","ai","air-balloon","airplane","arrow-ball-down","arrow-ball-left","arrow-ball-right","arrow-ball-up","arrow-down","arrow-first","arrow-last","arrow-left","arrow-right","arrow-up","attach","attention","audio","automation","avatar-user","bag","barcode","bell","bill","blip-ideas","blip-tutorials","book","bug-report","builder-carrousel","builder-menu","builder-new-state","builder-publish-bot","builder-quick-reply","builder-router","builder-test-bot","builder-text-message","business","button","calendar","camera","cart-shop","catalog","channels","chart-bar","chart-column","chart-line","chart-pizza","check","checkball","chip","clock","close","cloud-2","cloud","company","conections","contact","cookie","copy","custom-channel","data-security","date-time","debug","delete","deslike","double-check","download","dynamic-content","edit","email","emoji","emoji-negative","emoji-neutral","error","external-file","eye-closed","eye-open","exit","false","facebook","faq","favorite","file-csv","file-doc","file-empty-file","file-gif","file-image-broken","file-image","file-image-expired","file-video-expired","file-java-script","file-json","file-name-csv","file-name-doc","file-name-pdf","file-name-ppt","file-name-txt","file-name-xls","file-name-zip","file-new","file-pdf","file-ppt","file-txt-1","file-txt","filter","folder","guide","gift","heart","home","info","instagram","integration","integrations-channels","keyboard","less","library","like","link","list","loading","localization","localization-ask","localization-send","lock","logout","mail","mark","megaphone","menu-dot","menu-hamburger","message-active","message-ballon","message-received","message-sent","message-talk","message-total","message-unread","messenger","monitoring","more-options-horizontal","more-options-vertical","mouse","move","notebook","notes","order-elements","openfinance","paint","paperplane","pause","payment-card","payment-card-cvc","piggy-bank","pin","pix","play","plugin","plus","primeiro-acesso","priorization","qrcode","question","redo","refresh","refresh-all","resources","restore","robot","robot-2","robot-3","robot-4","robot-5","sale","save-disk","save-flag","screen-fill","screen-full","search","send","service-queue","settings-adjusments","settings-builder","settings-general","share","site","skills","smartphone","sms","speaker","sso","status","store","tag","target","team","text-style-bold","text-style-italic","text-style-strikethrough","text-style-underline","ticket","time-passed","transfer","trash","trophy","true","typing","undo","unlock","unpin","upload","user-active","user-default","user-engaged","verified","video-broken","video","voip","whatsapp","wallet","warning","xml"],emojiNames=["beaming-face","confounded-face","crying-face","dizzy-face","expressionless-face","face-blowing-a-kiss","face-with-mask","face-with-open-mouth","face-with-tears-of-joy","face-with-tongue","face-without-mouth","fearful-face","grinning-face","grinning-face-with-big-eyes","grinning-face-with-smilling-eyes","grinning-face-with-sweat","hushed-face","kissing-face-with-smilling-eyes","loudly-cring-face","nerd-face","neutral-face","perservering-face","pouting-face","relieved-face","sleeping-face","slightly-frowning-face","slightly-smiling-face","smiling-face","smiling-face-with-halo","smiling-face-with-heart-eyes","smiling-face-with-smiling-eyes","smiling-face-with-sunglasses","smirking-face","squirting-face-with-tongue","winking-face","winking-face-with-tongue"],logoNames=["adlingo","alexa","apple","blip-chat","bot-analytics","business-chat","buscape","chatbase","dashbot","dialogflow","email","facebook","foursquare","gbm","github","google-assistant","google-rcs","google","google-plus","hangouts","infopib","instagram","instagram-2","instagram-reels","instagram-storys","mailgun","mercado-livre","messenger","meta","microsoft-luis","microsoft-teams","pag-seguro","pix","open-finance","rd","reclame-aqui","salesforce","skype","slack","sms","stripe","sugar","telegram","twitter","vine","voip","we-chat","webhook","whatsapp","whatsapp-2","workplace","wikipedia","youtube","linkedin","tiktok","tumblr","google-play","google-meu-negocio","cielo","zapier"],iconStyles={width:"70px",height:"64px",display:"flex",alignItems:"center",flexDirection:"column",padding:"1px"},iconWrapperStyles={display:"flex",flexWrap:"wrap",gap:"24px"},Properties=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-icon",{theme:"outline",size:args.size,name:args.name});Properties.displayName="Properties",Properties.args={size:"medium",name:"info"},Properties.argTypes={size:{table:{defaultValue:{summary:"medium"}},description:"Defina qual a interação para abrir o componente.",options:["brand","xxx-large","xx-large","x-large","large","medium","small","x-small","xx-small","xxx-small"],control:"select"},name:{table:{defaultValue:{summary:"vazio"}},control:"text"}};const FrameworkReact=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_blip_ds_react_dist_components__WEBPACK_IMPORTED_MODULE_3__.ho,{theme:"outline",size:"brand",name:"info"});FrameworkReact.displayName="FrameworkReact";const AllOutlineIcons=()=>{const[searchValue,setSearchValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[filteredIcons,setFilteredIcons]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),story=[];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{document.getElementById("icon-outline").addEventListener("bdsInput",(event=>{setSearchValue(event.target.value)}))}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const filtered=outlineIconsName.filter((name=>name.toLowerCase().includes(searchValue.toLowerCase())));setFilteredIcons(filtered)}),[searchValue]),filteredIcons.forEach((name=>{story.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:iconStyles,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-icon",{theme:"outline",size:"xxx-large",name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-typo",{variant:"fs-10",children:name})]},name))})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("bds-grid",{direction:"column",gap:"3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-grid",{md:"6","align-items":"center",gap:"3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-input",{id:"icon-outline",placeholder:"search icon"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:iconWrapperStyles,children:story})]})};AllOutlineIcons.displayName="AllOutlineIcons";const AllSolidIcons=()=>{const[searchValue,setSearchValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[filteredIcons,setFilteredIcons]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),story=[];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{document.getElementById("icon-solid").addEventListener("bdsInput",(event=>{setSearchValue(event.target.value)}))}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const filtered=solidIconsName.filter((name=>name.toLowerCase().includes(searchValue.toLowerCase())));setFilteredIcons(filtered)}),[searchValue]),filteredIcons.forEach((name=>{story.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{style:iconStyles,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-icon",{theme:"solid",size:"xxx-large",name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-typo",{variant:"fs-10",children:name})]},name))})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("bds-grid",{direction:"column",gap:"3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-grid",{md:"6","align-items":"center",gap:"3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-input",{id:"icon-solid",placeholder:"search icon"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:iconWrapperStyles,children:story})]})};AllSolidIcons.displayName="AllSolidIcons";const AllEmojis=()=>{const[searchValue,setSearchValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[filteredIcons,setFilteredIcons]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),story=[];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{document.getElementById("emoji").addEventListener("bdsInput",(event=>{setSearchValue(event.target.value)}))}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const filtered=emojiNames.filter((name=>name.toLowerCase().includes(searchValue.toLowerCase())));setFilteredIcons(filtered)}),[searchValue]),filteredIcons.forEach((name=>{story.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("bds-grid",{height:"80px",gap:"1",style:iconStyles,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-icon",{type:"emoji",size:"xxx-large",name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-typo",{variant:"fs-10",children:name})]},name))})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("bds-grid",{direction:"column",gap:"3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-grid",{md:"6","align-items":"center",gap:"3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-input",{id:"emoji",placeholder:"search icon"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:iconWrapperStyles,children:story})]})};AllEmojis.displayName="AllEmojis";const AllLogos=()=>{const[searchValue,setSearchValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[filteredIcons,setFilteredIcons]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),story=[];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{document.getElementById("logos").addEventListener("bdsInput",(event=>{setSearchValue(event.target.value)}))}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const filtered=logoNames.filter((name=>name.toLowerCase().includes(searchValue.toLowerCase())));setFilteredIcons(filtered)}),[searchValue]),filteredIcons.forEach((name=>{story.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("bds-grid",{height:"80px",gap:"1",style:iconStyles,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-icon",{type:"logo",size:"xxx-large",name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-typo",{variant:"fs-10",children:name})]},name))})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("bds-grid",{direction:"column",gap:"3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-grid",{md:"6","align-items":"center",gap:"3",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("bds-input",{id:"logos",placeholder:"search icon"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:iconWrapperStyles,children:story})]})};AllLogos.displayName="AllLogos",Properties.parameters={...Properties.parameters,docs:{...Properties.parameters?.docs,source:{originalSource:'args => {\n  return <bds-icon theme="outline" size={args.size} name={args.name}></bds-icon>;\n}',...Properties.parameters?.docs?.source}}},FrameworkReact.parameters={...FrameworkReact.parameters,docs:{...FrameworkReact.parameters?.docs,source:{originalSource:'() => {\n  return <BdsIcon theme="outline" size="brand" name="info"></BdsIcon>;\n}',...FrameworkReact.parameters?.docs?.source}}},AllOutlineIcons.parameters={...AllOutlineIcons.parameters,docs:{...AllOutlineIcons.parameters?.docs,source:{originalSource:'() => {\n  const [searchValue, setSearchValue] = useState(\'\');\n  const [filteredIcons, setFilteredIcons] = useState([]);\n  const story = [];\n  useEffect(() => {\n    const iconOutline = document.getElementById(\'icon-outline\');\n    iconOutline.addEventListener(\'bdsInput\', event => {\n      setSearchValue(event.target.value);\n    });\n  }, []);\n  useEffect(() => {\n    // Aqui você pode filtrar os ícones com base no valor de pesquisa.\n    const filtered = outlineIconsName.filter(name => name.toLowerCase().includes(searchValue.toLowerCase()));\n    setFilteredIcons(filtered);\n  }, [searchValue]);\n  filteredIcons.forEach(name => {\n    story.push(<div key={name} style={iconStyles}>\n        <bds-icon theme="outline" size="xxx-large" name={name}></bds-icon>\n        <bds-typo variant="fs-10">{name}</bds-typo>\n      </div>);\n  });\n  return <bds-grid direction="column" gap="3">\n      <bds-grid md="6" align-items="center" gap="3">\n        <bds-input id="icon-outline" placeholder="search icon"></bds-input>\n      </bds-grid>\n\n      <div style={iconWrapperStyles}>{story}</div>\n    </bds-grid>;\n}',...AllOutlineIcons.parameters?.docs?.source}}},AllSolidIcons.parameters={...AllSolidIcons.parameters,docs:{...AllSolidIcons.parameters?.docs,source:{originalSource:'() => {\n  const [searchValue, setSearchValue] = useState(\'\');\n  const [filteredIcons, setFilteredIcons] = useState([]);\n  const story = [];\n  useEffect(() => {\n    const iconOutline = document.getElementById(\'icon-solid\');\n    iconOutline.addEventListener(\'bdsInput\', event => {\n      setSearchValue(event.target.value);\n    });\n  }, []);\n  useEffect(() => {\n    // Aqui você pode filtrar os ícones com base no valor de pesquisa.\n    const filtered = solidIconsName.filter(name => name.toLowerCase().includes(searchValue.toLowerCase()));\n    setFilteredIcons(filtered);\n  }, [searchValue]);\n  filteredIcons.forEach(name => {\n    story.push(<div key={name} style={iconStyles}>\n        <bds-icon theme="solid" size="xxx-large" name={name}></bds-icon>\n        <bds-typo variant="fs-10">{name}</bds-typo>\n      </div>);\n  });\n  return <bds-grid direction="column" gap="3">\n      <bds-grid md="6" align-items="center" gap="3">\n        <bds-input id="icon-solid" placeholder="search icon"></bds-input>\n      </bds-grid>\n\n      <div style={iconWrapperStyles}>{story}</div>\n    </bds-grid>;\n}',...AllSolidIcons.parameters?.docs?.source}}},AllEmojis.parameters={...AllEmojis.parameters,docs:{...AllEmojis.parameters?.docs,source:{originalSource:'() => {\n  const [searchValue, setSearchValue] = useState(\'\');\n  const [filteredIcons, setFilteredIcons] = useState([]);\n  const story = [];\n  useEffect(() => {\n    const emoji = document.getElementById(\'emoji\');\n    emoji.addEventListener(\'bdsInput\', event => {\n      setSearchValue(event.target.value);\n    });\n  }, []);\n  useEffect(() => {\n    // Aqui você pode filtrar os ícones com base no valor de pesquisa.\n    const filtered = emojiNames.filter(name => name.toLowerCase().includes(searchValue.toLowerCase()));\n    setFilteredIcons(filtered);\n  }, [searchValue]);\n  filteredIcons.forEach(name => {\n    story.push(<bds-grid height="80px" gap="1" key={name} style={iconStyles}>\n        <bds-icon type="emoji" size="xxx-large" name={name}></bds-icon>\n        <bds-typo variant="fs-10">{name}</bds-typo>\n      </bds-grid>);\n  });\n  return <bds-grid direction="column" gap="3">\n      <bds-grid md="6" align-items="center" gap="3">\n        <bds-input id="emoji" placeholder="search icon"></bds-input>\n      </bds-grid>\n\n      <div style={iconWrapperStyles}>{story}</div>\n    </bds-grid>;\n}',...AllEmojis.parameters?.docs?.source}}},AllLogos.parameters={...AllLogos.parameters,docs:{...AllLogos.parameters?.docs,source:{originalSource:'() => {\n  const [searchValue, setSearchValue] = useState(\'\');\n  const [filteredIcons, setFilteredIcons] = useState([]);\n  const story = [];\n  useEffect(() => {\n    const logos = document.getElementById(\'logos\');\n    logos.addEventListener(\'bdsInput\', event => {\n      setSearchValue(event.target.value);\n    });\n  }, []);\n  useEffect(() => {\n    // Aqui você pode filtrar os ícones com base no valor de pesquisa.\n    const filtered = logoNames.filter(name => name.toLowerCase().includes(searchValue.toLowerCase()));\n    setFilteredIcons(filtered);\n  }, [searchValue]);\n  filteredIcons.forEach(name => {\n    story.push(<bds-grid height="80px" gap="1" key={name} style={iconStyles}>\n        <bds-icon type="logo" size="xxx-large" name={name}></bds-icon>\n        <bds-typo variant="fs-10">{name}</bds-typo>\n      </bds-grid>);\n  });\n  return <bds-grid direction="column" gap="3">\n      <bds-grid md="6" align-items="center" gap="3">\n        <bds-input id="logos" placeholder="search icon"></bds-input>\n      </bds-grid>\n\n      <div style={iconWrapperStyles}>{story}</div>\n    </bds-grid>;\n}',...AllLogos.parameters?.docs?.source}}};const __namedExportsOrder=["Properties","FrameworkReact","AllOutlineIcons","AllSolidIcons","AllEmojis","AllLogos"]},"./src/components/icon/icon.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_blip_ds_blip_ds_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_icon_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/icon/icon.stories.jsx");function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2",p:"p"},(0,_home_runner_work_blip_ds_blip_ds_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"icon",children:"Icon"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"overview",children:"Overview"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Icon allows users to select a date or a range of dates."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Xz,{of:_icon_stories__WEBPACK_IMPORTED_MODULE_2__.Properties}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.h_,{isTemplate:!0}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The following properties that are shared by Icon."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.ZX,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"build-on-react",children:"Build on React"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Hw,{of:_icon_stories__WEBPACK_IMPORTED_MODULE_2__.FrameworkReact})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_blip_ds_blip_ds_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);